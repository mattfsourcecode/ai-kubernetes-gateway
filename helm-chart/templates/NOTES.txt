1. Get the application URL by running these commands:
{{- if contains "NodePort" .Values.localai.service.type }}
export NODE_PORT=$(kubectl get --namespace {{ .Release.Namespace }} -o jsonpath="{.spec.ports[0].nodePort}" services {{ include "helm-chart.fullname" . }})
export NODE_IP=$(kubectl get nodes --namespace {{ .Release.Namespace }} -o jsonpath="{.items[0].status.addresses[0].address}")
echo http://$NODE_IP:$NODE_PORT
{{- else if contains "LoadBalancer" .Values.localai.service.type }}
    NOTE: It may take a few minutes for the LoadBalancer IP to be available.
        You can watch its status by running 'kubectl get --namespace {{ .Release.Namespace }} svc -w {{ include "helm-chart.fullname" . }}'
export SERVICE_IP=$(kubectl get svc --namespace {{ .Release.Namespace }} {{ include "helm-chart.fullname" . }} --template "{{"{{ range (index .status.loadBalancer.ingress 0) }}{{.}}{{ end }}"}}")
echo http://$SERVICE_IP:{{ .Values.localai.service.port }}
{{- else if contains "ClusterIP" .Values.localai.service.type }}
echo "The service is exposed via Gateway API. To access it:"
echo "1. Ensure your Gateway API resources are properly configured"
echo "2. Get the Gateway hostname/IP using:"
echo "   kubectl get gateway -n {{ .Release.Namespace }}"
echo "3. The service will be available at the Gateway address on the configured path"
{{- end }}
