# LocalAI configuration
fullnameOverride: "localai"

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""
  # Annotations to add to the service account
  annotations: {}
  # AutomountServiceAccountToken indicates whether pods running as this service account should have an API token automatically mounted
  automount: true

# LocalAI configuration 
localai:
  enabled: true
  replicaCount: 1
  image:
    repository: localai/localai
    tag: latest
    pullPolicy: IfNotPresent

  # Environment variables configuration
  env:
    - name: LOCALAI_MODELS_PATH
      value: /build/models

  # Model configuration
  models:
    path: /build/models
    preload:
      - name: llama-3.2-1b-instruct-q4_k_m.gguf
        url: https://huggingface.co/hugging-quants/Llama-3.2-1B-Instruct-Q4_K_M-GGUF/resolve/main/llama-3.2-1b-instruct-q4_k_m.gguf

  # Persistent volume configuration for models
  persistence:
    models:
      enabled: true
      createClaim: true
      size: 10Gi
      storageClass: "microk8s-hostpath"
      mountPath: /build/models
    output:
      enabled: false
      createClaim: false
      size: 1Gi
      storageClass: "microk8s-hostpath"
      mountPath: /build/output

  service:
    type: ClusterIP
    port: 8080

# Gateway API configuration
gateway:
  enabled: true
  hostname: "ai.example.com"
  tls:
    enabled: true
  class: nginx
  listeners:
    - name: http
      protocol: HTTP
      port: 80
      allowedRoutes:
        namespaces:
          from: Same
    - name: https
      protocol: HTTPS
      port: 443
      allowedRoutes:
        namespaces:
          from: Same
      tls:
        mode: Terminate
        certificateRefs:
          - name: localai-tls
            kind: Secret
  hostnames:
    - "ai.example.com"
  rules:
    - matches:
        - path:
            type: PathPrefix
            value: /
service:
  type: ClusterIP
  port: 8080
